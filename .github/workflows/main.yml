name: build-images

on:
  push:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build and push QA
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          target: ci
          build-args: |
            PHP_VERSION=8.0
          tags: |
            uogsoe/${{ github.event.repository.name }}:qa-${{ github.sha }}
      - name: Run tests
        run: |
          export IMAGE_NAME=uogsoe/${{ github.event.repository.name }}:qa-${{ github.sha }}
          docker-compose -f docker-compose.test.yml up --exit-code-from test
      - name: Build and push prod
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64 #,linux/arm/v7,linux/arm64
          push: true
          target: prod
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            PHP_VERSION=8.0
          tags: |
            uogsoe/${{ github.event.repository.name }}:prod-${{ github.sha }}
